############################################
###             Base image               ###
############################################

# Taken from .ruby-version
ARG RUBY_VERSION=2.7.6
FROM ruby:$RUBY_VERSION-slim-buster as base
LABEL author="IdeaCrew"

ENV USERNAME=edi_gateway

ARG DEBIAN_FRONTEND=noninteractive

# Taken from Gemfile.lock
ARG BUNDLER_VERSION=2.3.3

# Must be set as ENV variable to overrride the default
ENV BUNDLER_VERSION=$BUNDLER_VERSION

# Basic packages needed because we're using the slim image
RUN apt-get update \
    && apt-get -yq dist-upgrade  \
    && apt-get install -y \
      fontconfig \
      libcurl4-openssl-dev \
      libffi6 \
      libpq5 \
      libsodium23 \
      libxext6 \
      libxrender1 \
      libyaml-cpp0.6 \
      openssl \
      nano \
      sshpass \
      unzip \
      zip \
      zlibc \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \
    && truncate -s 0 /var/log/*log

# Configure bundler and PATH, install bundler version
ENV GEM_HOME=/usr/local/bundle
ENV BUNDLE_PATH=$GEM_HOME
ENV BUNDLE_APP_CONFIG=$BUNDLE_PATH
ENV BUNDLE_BIN=/usr/local/bin
ENV BUNDLE_JOBS=4
ENV BUNDLE_RETRY=3

ENV LANG=C.UTF-8

ENV HOME=/edi_gateway

ENV PATH=$HOME/bin:$BUNDLE_BIN:$GEM_HOME/gems/bin:$PATH

RUN gem update --system
RUN rm -f /usr/local/bin/ruby/gems/*/specifications/default/bundler-*.gemspec
RUN gem install bundler -v $BUNDLER_VERSION

RUN groupadd --gid 1001 $USERNAME \
  && useradd --uid 1001 --gid $USERNAME --shell /bin/bash --create-home $USERNAME

RUN mkdir $HOME && chown -R $USERNAME:$USERNAME $HOME

# Configure app home directory
WORKDIR $HOME

ARG SECRET_KEY_BASE_DEFAULT=c8d2b9b204fbac78081a88a2c29b28cfeb82e6ccd3664b3948b813463b5917b315dbbd3040e8dffcb5b68df427099db0ce03e59e2432dfe5d272923b00755b82
ENV SECRET_KEY_BASE=$SECRET_KEY_BASE_DEFAULT

ENV RAILS_ENV=production
ENV NODE_ENV=production

###############################################################################
###       Builder. Adds node and Yarn. Not necessary in production.         ###
###############################################################################

FROM base as builder

ARG DEBIAN_FRONTEND=noninteractive

RUN apt-get update -qq \
  && apt-get install -yq --no-install-recommends \
    build-essential \
    git \
    libpq-dev \
  && apt-get clean \
  && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \
  && truncate -s 0 /var/log/*log

########################################################
###          Node and Bundle for production          ###
########################################################

FROM builder as prod_gems_and_assets

ARG HOSTNAME=localhost

# EDI Gateway Specific Config
ENV EDI_GATEWAY_DB_HOST=${HOSTNAME}
ENV EDI_GATEWAY_DB_NAME=edi_gateway_production
ENV EDI_GATEWAY_DB_PORT=27017

# Needed for most repos, not service-specific
ARG RABBITMQ_URL=amqp://${HOSTNAME}:5672
ARG RABBITMQ_URL_EVENT_SOURCE=amqp://${HOSTNAME}
ARG RABBITMQ_HOST=amqp://${HOSTNAME}
ARG RABBITMQ_VHOST=event_source

COPY --chown=$USERNAME:$USERNAME ./Gemfile $HOME/Gemfile
COPY --chown=$USERNAME:$USERNAME ./Gemfile.lock $HOME/Gemfile.lock

ARG BUNDLE_GITHUB__COM

RUN bundle config set --local without 'development test' \
  && bundle install

COPY --chown=$USERNAME:$USERNAME . $HOME
COPY --chown=$USERNAME:$USERNAME ./.docker/config/master.key $HOME/config
COPY --chown=$USERNAME:$USERNAME ./.docker/config/credentials.yml.enc $HOME/config
COPY --chown=$USERNAME:$USERNAME ./.docker/config/mongoid.yml $HOME/config

RUN (rm -rf /tmp/* || true) \
  # Cleanup
  && rm -rf $BUNDLE_PATH/*.gem \
  && find $BUNDLE_PATH/ruby -name "*.c" -delete \
  && find $BUNDLE_PATH/ruby -name "*.o" -delete \
  && find $BUNDLE_PATH/ruby -name ".git"  -type d -prune -execdir rm -rf {} +

# https://github.com/rubygems/rubygems/issues/3225
RUN rm -rf $GEM_HOME/ruby/*/cache

################################################################
###                     Deployable image                     ###
################################################################

FROM base as deploy

ARG HOSTNAME=localhost

ENV EDI_GATEWAY_DB_AUTH=true
ENV EDI_GATEWAY_DB_NAME=anything
ENV EDI_GATEWAY_DB_HOST=anything
ENV EDI_GATEWAY_DB_PORT=anything
ENV EDI_GATEWAY_DB_REPLICA_SET_NAME=anything
ENV EDI_GATEWAY_DB_USERNAME=anything
ENV EDI_GATEWAY_DB_PASSWORD=anything

ENV RABBITMQ_URL=amqp://${HOSTNAME}:5672
ENV RABBITMQ_URL_EVENT_SOURCE=amqp://${HOSTNAME}
ENV RABBITMQ_HOST=amqp://${HOSTNAME}
ENV RABBITMQ_VHOST=event_source

# Copy prebuilt gems
COPY --chown=$USERNAME:$USERNAME --from=prod_gems_and_assets $BUNDLE_PATH $BUNDLE_PATH

# Copy all app code again (sans gems, node_modules, assets)
COPY --chown=$USERNAME:$USERNAME . $HOME

# Copy environment-based config files
COPY --chown=$USERNAME:$USERNAME ./.docker/config/mongoid.yml $HOME/config
COPY --chown=$USERNAME:$USERNAME ./.docker/config/credentials.yml.enc $HOME/config
COPY --chown=$USERNAME:$USERNAME ./.docker/config/master.key $HOME/config

USER $USERNAME
